# Optimized Flutter CI workflow with best practices
name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'

env:
  WORKING_DIRECTORY: mobile

jobs:
  analyze:
    name: Analyze (lint & format)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/.dart_tool
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Check Dart format
        run: dart format --set-exit-if-changed .

      - name: Run Flutter analyze
        run: flutter analyze

      - name: Check for outdated dependencies
        run: dart pub outdated || true

  test:
    name: Test (unit & widget)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        flutter-version: [ '3.10.6', '3.16.9', 'stable' ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter ${{ matrix.flutter-version }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/.dart_tool
            ~/.pub-cache
          key: ${{ runner.os }}-${{ matrix.flutter-version }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.flutter-version }}-pub-
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Run all tests with coverage
        run: flutter test --coverage

      - name: Run StellarWalletService targeted tests
        run: flutter test test/services/stellar_wallet_service_test.dart --coverage --coverage-path=coverage/stellar_service_lcov.info

      - name: Run ApiService targeted tests
        run: flutter test test/services/api_service_test.dart --coverage --coverage-path=coverage/api_service_lcov.info

      - name: Run UI widget tests
        run: flutter test test/widgets/ui_widgets_test.dart

      - name: Generate coverage report
        run: |
          # Merge coverage files if they exist
          if [ -f "coverage/lcov.info" ]; then
            echo "Main coverage report generated"
          fi
          if [ -f "coverage/stellar_service_lcov.info" ]; then
            echo "Stellar service coverage generated"
          fi
          if [ -f "coverage/api_service_lcov.info" ]; then
            echo "API service coverage generated"
          fi

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.flutter-version }}
          path: coverage/
          retention-days: 7

  build-android:
    name: Build Android (APK/AAB)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/.dart_tool
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/android/.gradle
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: flutter pub get

      - name: Clean previous builds
        run: flutter clean

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Build release APK
        run: flutter build apk --release

      - name: Build app bundle
        run: flutter build appbundle --release

      - name: Upload Android build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            ${{ env.WORKING_DIRECTORY }}/build/app/outputs/apk/debug/app-debug.apk
            ${{ env.WORKING_DIRECTORY }}/build/app/outputs/apk/release/app-release.apk
            ${{ env.WORKING_DIRECTORY }}/build/app/outputs/bundle/release/app-release.aab
          retention-days: 14

  build-ios:
    name: Build iOS (IPA)
    runs-on: macos-latest
    timeout-minutes: 60
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/.dart_tool
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ${{ env.WORKING_DIRECTORY }}/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: flutter pub get

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Clean previous builds
        run: flutter clean

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign

      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-builds
          path: |
            ${{ env.WORKING_DIRECTORY }}/build/ios/iphoneos/Runner.app
          retention-days: 14

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/.dart_tool
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Clean previous builds
        run: flutter clean

      - name: Build web release
        run: flutter build web --release --base-href=/

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-builds
          path: ${{ env.WORKING_DIRECTORY }}/build/web/
          retention-days: 14
