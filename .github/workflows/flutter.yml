name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'

env:
  FLUTTER_VERSION_MATRIX: '3.10.6,3.16.9,stable'
  WORKING_DIRECTORY: mobile

jobs:
  analyze:
    name: Analyze (lint & format)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Flutter pub get (with cache)
        run: flutter pub get

      - name: Dart format check
        run: dart format --set-exit-if-changed .

      - name: Flutter analyze
        run: flutter analyze

      - name: Dependency vulnerability audit
        run: |
          dart pub outdated || true

  test:
    name: Test (unit & widget)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flutter: [ '3.10.6', '3.16.9', 'stable' ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter ${{ matrix.flutter }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter }}
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Run StellarWalletService targeted tests
        run: flutter test test/services/stellar_wallet_service_test.dart --coverage --coverage-path=coverage/stellar.info

      - name: Run ApiService targeted tests
        run: flutter test test/services/api_service_test.dart --coverage --coverage-path=coverage/api.info

      - name: Run UI widget tests
        run: flutter test test/widgets/ui_widgets_test.dart

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.flutter }}
          path: |
            mobile/coverage

  build-android:
    name: Build Android (APK/AAB)
    runs-on: ubuntu-latest
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Build release APK
        run: flutter build apk --release

      - name: Build appbundle
        run: flutter build appbundle --release

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            mobile/build/app/outputs/**/app-*.apk
            mobile/build/app/outputs/bundle/release/*.aab

  build-ios:
    name: Build iOS (IPA)
    runs-on: macos-latest
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Flutter pub get
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --no-codesign

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            mobile/build/ios/**/Build/**/*.app
            mobile/build/ios/**/Build/**/*.xcarchive

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [ analyze, test ]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build web
        run: flutter build web --release --base-href=/

      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: mobile/build/web


