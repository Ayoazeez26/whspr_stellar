import { Repository } from 'typeorm';
import { Cache } from 'cache-manager';
import { ConfigService } from '@nestjs/config';
import { WalletBalance } from '../entities/wallet-balance.entity';
import { WalletSummaryDto, WalletStatsDto, RefreshBalanceDto, GetBalanceDto } from '../dto/wallet.dto';
export declare class WalletService {
    private readonly walletBalanceRepo;
    private cacheManager;
    private readonly configService;
    private readonly logger;
    private baseProvider;
    private stellarServer;
    private cacheStats;
    constructor(walletBalanceRepo: Repository<WalletBalance>, cacheManager: Cache, configService: ConfigService);
    getUserWalletBalance(userId: string, options?: GetBalanceDto): Promise<WalletSummaryDto>;
    refreshUserBalances(userId: string, options?: RefreshBalanceDto): Promise<void>;
    private fetchBaseBalances;
    private fetchStellarBalances;
    private fetchERC20Balance;
    private getUserWalletAddresses;
    private getUserBalancesFromDb;
    private saveBalancesToDb;
    private clearUserCache;
    private buildWalletSummary;
    private mapBalanceToDto;
    private getTokenContractAddress;
    private getTokenDecimals;
    private formatTokenBalance;
    getWalletStats(): Promise<WalletStatsDto>;
    private getNetworkStats;
    private getTopAssets;
}
