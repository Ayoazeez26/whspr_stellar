import { Repository } from 'typeorm';
import { ConfigService } from '@nestjs/config';
import { SecretRoom } from '../entities/secret-room.entity';
import { RoomInvitation } from '../entities/room-invitation.entity';
import { RoomMember } from '../entities/room-member.entity';
import { CreateSecretRoomDto, UpdateSecretRoomDto, JoinRoomDto, InviteUserDto, SecretRoomDto, RoomMemberDto, RoomInvitationDto, RoomStatsDto, UserRoomLimitDto } from '../dto/secret-room.dto';
export declare class SecretRoomsService {
    private readonly secretRoomRepo;
    private readonly roomInvitationRepo;
    private readonly roomMemberRepo;
    private readonly configService;
    private readonly logger;
    private readonly maxRoomsPerUser;
    constructor(secretRoomRepo: Repository<SecretRoom>, roomInvitationRepo: Repository<RoomInvitation>, roomMemberRepo: Repository<RoomMember>, configService: ConfigService);
    createSecretRoom(dto: CreateSecretRoomDto, creatorId: string): Promise<SecretRoomDto>;
    getSecretRoom(roomId: string, userId?: string): Promise<SecretRoomDto>;
    getSecretRoomByCode(roomCode: string, userId?: string): Promise<SecretRoomDto>;
    getUserRooms(userId: string, limit?: number): Promise<SecretRoomDto[]>;
    joinRoom(dto: JoinRoomDto, userId: string): Promise<RoomMemberDto>;
    leaveRoom(roomId: string, userId: string): Promise<void>;
    inviteUser(roomId: string, dto: InviteUserDto, invitedBy: string): Promise<RoomInvitationDto>;
    acceptInvitation(invitationCode: string, userId: string): Promise<RoomMemberDto>;
    getRoomMembers(roomId: string, userId: string): Promise<RoomMemberDto[]>;
    updateRoom(roomId: string, dto: UpdateSecretRoomDto, userId: string): Promise<SecretRoomDto>;
    deleteRoom(roomId: string, userId: string): Promise<void>;
    getRoomStats(): Promise<RoomStatsDto>;
    getUserRoomLimit(userId: string): Promise<UserRoomLimitDto>;
    private checkUserRoomLimit;
    private generateUniqueRoomCode;
    private generateRoomCode;
    private generateUniqueInvitationCode;
    private generateInvitationCode;
    private addRoomMember;
    private isRoomMember;
    private updateRoomMemberCount;
    private mapRoomToDto;
    private mapMemberToDto;
    private mapInvitationToDto;
}
